{"version":3,"sources":["App.js","reportWebVitals.js","index.js","image (1).png"],"names":["App","triangles","Array","from","length","_","index","React","createElement","key","className","style","--index","--position","Math","random","href","alt","src","Overdrive","Typewriter","onInit","typewriter","typeString","pauseFor","start","id","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports","p"],"mappings":"4NAqEeA,EAhEH,WAEV,IAAMC,EAAYC,MAAMC,KAAK,CAAEC,OAAQ,IAAM,SAACC,EAAGC,GAAK,OACpDC,IAAAC,cAAA,OACEC,IAAKH,EACLI,UAAU,sBACVC,MAAO,CACLC,UAAWN,EACXO,aAAcC,KAAKC,cAKzB,OACER,IAAAC,cAAA,OAAKE,UAAU,WACZT,EAAU,IACXM,IAAAC,cAAA,OAAKE,UAAU,UACbH,IAAAC,cAAA,OAAKE,UAAU,QACbH,IAAAC,cAAA,WACED,IAAAC,cAAA,KAAGQ,KAAK,QAAQN,UAAU,WAAU,QAGpCH,IAAAC,cAAA,KAAGQ,KAAK,SAASN,UAAU,WAAU,SAGrCH,IAAAC,cAAA,KAAGQ,KAAK,WAAWN,UAAU,WAAU,aAM3CH,IAAAC,cAAA,OAAKE,UAAU,OAAOO,IAAI,OAAOC,IAAKC,MACtCZ,IAAAC,cAAA,OAAKE,UAAU,SACbH,IAAAC,cAACY,IAAU,CACTC,OAAQ,SAACC,GACPA,EAAWC,WAAW,sBAAsBC,SAAS,KAAMC,aAMnElB,IAAAC,cAAA,MAAIE,UAAU,aAAY,WAC1BH,IAAAC,cAAA,OAAKkB,GAAG,OAAOhB,UAAU,QACvBH,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAG,6BACHD,IAAAC,cAAA,SAAG,wBAGLD,IAAAC,cAAA,MAAIE,UAAU,cAAa,aAC3BH,IAAAC,cAAA,OAAKkB,GAAG,QAAQhB,UAAU,SACxBH,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAG,wBAGLD,IAAAC,cAAA,MAAIE,UAAU,gBAAe,iBAC7BH,IAAAC,cAAA,OAAKkB,GAAG,UAAUhB,UAAU,WAC1BH,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAG,4BACHD,IAAAC,cAAA,SAAG,wBCnDImB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrC,IAAAC,cAACD,IAAMsC,WAAU,KACftC,IAAAC,cAACR,EAAG,QAOR2B,uBChBAmB,EAAAC,QAAiBjB,EAAAkB,EAAuB","file":"static/js/main.ea560057.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Overdrive from './image (1).png';\r\nimport Typewriter from 'typewriter-effect';\r\n\r\nconst App = () => {\r\n  // Generate an array of triangles\r\n  const triangles = Array.from({ length: 50 }, (_, index) => (\r\n    <div\r\n      key={index}\r\n      className=\"triangle-background\"\r\n      style={{\r\n        '--index': index,\r\n        '--position': Math.random(),\r\n      }}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      {triangles} {/* Render the spinning triangles */}\r\n      <div className=\"banner\">\r\n        <div className=\"tabs\">\r\n          <nav>\r\n            <a href=\"#Home\" className=\"tabLink\">\r\n              Home\r\n            </a>\r\n            <a href=\"#About\" className=\"tabLink\">\r\n              About\r\n            </a>\r\n            <a href=\"#Contact\" className=\"tabLink\">\r\n              Contact\r\n            </a>\r\n          </nav>\r\n        </div>\r\n\r\n        <img className=\"logo\" alt=\"logo\" src={Overdrive} />\r\n        <div className=\"title\">\r\n          <Typewriter\r\n            onInit={(typewriter) => {\r\n              typewriter.typeString('OVERDR!VE ROBOTICS').pauseFor(1000).start();\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <h2 className=\"homeTitle\">H O M E</h2>\r\n      <div id=\"Home\" className=\"Home\">\r\n        <br />\r\n        <p>Here are our team members</p>\r\n        <p>Here are our awards</p>\r\n      </div>\r\n\r\n      <h2 className=\"aboutTitle\">A B O U T</h2>\r\n      <div id=\"About\" className=\"About\">\r\n        <br />\r\n        <p>Here are our robots</p>\r\n      </div>\r\n\r\n      <h2 className=\"contactTitle\">C O N T A C T</h2>\r\n      <div id=\"Contact\" className=\"Contact\">\r\n        <br />\r\n        <p>Here's our interest form</p>\r\n        <p>Contact form here</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/image (1).042f1619.png\";"],"sourceRoot":""}